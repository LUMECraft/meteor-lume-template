:root {
	/*
	 * All :root vars are defined in styleVars.ts using the styleVars object, so
	 * that they are also available in JS.
	 */
	--: initial;
}

html {
	font-size: 1em;
	line-height: 1.4;
}

html,
body,
#root {
	width: 100%;
	height: 100%;
	padding: 0;
	margin: 0;
	pointer-events: none;
	box-sizing: border-box;

	color: black;
	background: var(--appBackground);

	[data-theme='dark'] & {
		color: white;
		background: var(--appBackgroundDark);
	}
}

/* prettier-ignore */
h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  text-transform: uppercase;
}
h1 {
	font-weight: 300;
	padding-bottom: 40px;
}
h3 {
	font-weight: 300;
	text-transform: lowercase;
}

a:link,
a:visited,
a:hover,
a:active {
	font-weight: 500;
	transition: all 0.5s;
	color: rgba(195, 195, 195, 0.9);
	text-decoration: none;
}

a:hover {
	color: rgba(255, 255, 255, 1);
	text-decoration: none;
}

body {
	position: absolute;
	-webkit-transform-style: preserve-3d;
	transform-style: preserve-3d;
	-webkit-font-smoothing: antialiased;
	-webkit-tap-highlight-color: transparent;
	-webkit-perspective: 0;
	perspective: none;
	overflow: hidden;
	font-family: 'Gotham', 'Helvetica', sans-serif;
	font-size: 14px;
}

body.fadePageOut {
	opacity: 0;
	transition: opacity 0.5s;
}

.hidden {
	display: none;
}

.invisible {
	opacity: 0 !important;
}

#loadingCover {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	transition: opacity 0.5s;

	/* TODO Perhaps put the loading cover in the :modal layer so z-index is never needed.  */
	z-index: 1000;

	loading-icon {
		--loading-icon-color: 76, 169, 195;
		--loading-icon-outer-radius: 60px;
		--loading-icon-inner-radius: 30px;
	}

	background: var(--appBackground);

	[data-theme='dark'] & {
		background: var(--appBackgroundDark);
	}
}
